from Crypto.Util.number import *
from gmpy2 import *
#from secret import flag

p=11202724611138636062970864770438589479244102973570493327901297960170093740083627681372474220478706897477820368582213140314910480871560482781905349470385281
q=9491683429505997493154877769597912626416752630356476410989459686188788162115233919430343606667551439118856203441639297431149863038636614651099357451434241
c=538435351601953846549512563228807380721875084614680456891892690034158529237510119969477031806186303449646993933705430597362910854000413145776731288196418400979575683750958157576241801216573911489300474408885593131477044284744851825470269492514724722216132501748362773348033677710186472414243919212198416301188353146098919462252377832163510962331136144814859073253182174032945855047442999332055185573654891546712621722534972869140245371739332129406537631131991266

# encode
#n = p*p*q
#c = powmod(bytes_to_long(flag), n, n)

# decode
phi = (p-1)*(q-1)
d = invert(p*p*q, phi)
print(long_to_bytes(powmod(c, d, p*q))) # schemidt samoa is not RSA.