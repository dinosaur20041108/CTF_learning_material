c=0x7a7e031f14f6b6c3292d11a41161d2491ce8bcdc67ef1baa9e
e=0x872a335
#q + q*p^3 =1285367317452089980789441829580397855321901891350429414413655782431779727560841427444135440068248152908241981758331600586
#qp + q *p^2 = 1109691832903289208389283296592510864729403914873734836011311325874120780079555500202475594
from Crypto.Util.number import *
from gmpy2 import *
import sympy
from sympy.abc import p,q
k1=1285367317452089980789441829580397855321901891350429414413655782431779727560841427444135440068248152908241981758331600586
k2=1109691832903289208389283296592510864729403914873734836011311325874120780079555500202475594
s=sympy.solve([q + q*p**3-k1, q*p + q*p*p-k2],[p,q])
p=int(s[1][0])
q=int(s[1][1])
d=invert(e,(p-1)*(q-1))
m=powmod(c,d,p*q)
print(long_to_bytes(m))