dp=9687292937908072147579049250988081775855539044923311720198690573474287641454365358703521064711717420735768778834437976970203559182947746549749603187487505
e=65537
n=114860131475576868044469322177756019321092670748802897838634438431105851516102018826069834693268285578435739849271988881447945927402667447403384833500315278714996147878560539297329569185401005035910105999777451901595072160624418225507740490655905809156214221980600288418576937959820118735961738522289866521291
c=70797723923120982204288411400549608443905082052553090178532558315985576492738142194219444511546956350978951798116112179012673420261126453679586759941468235108491465752344586472229099273690662486690431877021814800209593236424267788908919445045306451823812524528176545903304014054612347105799277774774383749101
#
from Crypto.Util.number import *
from gmpy2 import *

for x in range (1,e):
    if(e*dp-1)%x==0:
        p=(e*dp-1)//x+1
        if n%p==0:
            q=n//p
            d=invert(e,(p-1)*(q-1))
            m=powmod(c,d,n)
            print(long_to_bytes(m))